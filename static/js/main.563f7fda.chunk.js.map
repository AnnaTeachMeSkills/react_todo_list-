{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/SearchBlock/index.js","components/SearchBlock/SearchBlock.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/App/index.js","components/App/App.js","index.js"],"names":["AppHeader","props","toDo","done","className","SearchBlock","state","detectedText","onSearchChange","event","target","value","setState","onSeachChange","placeholder","this","onChange","React","Component","TodoListItem","label","onDelete","important","onToggleDone","onToggleImportant","classNames","onClick","aria-hidden","TodoList","todoItems","elements","map","element","id","otherProps","key","ItemAddForm","inputText","onInputTextChange","onSubmit","preventDefault","onItemAdd","type","required","ItemStatusFilter","buttons","onItemsFilterChange","filter","el","btnClass","App","ids","todoData","deleteItem","prevState","index","findIndex","elem","slice","addItem","text","item","toggleProp","arr","prop","oldObj","newObj","toggleDone","toggleImportant","search","length","toUpperCase","indexOf","ItemsFilter","filterText","detectedItems","todo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.563f7fda.chunk.js","sourcesContent":["import AppHeader from './AppHeader.js';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './AppHeader.css';\r\n\r\nconst AppHeader = (props) => {\r\n    const {toDo, done} =props;\r\n\r\n    return (\r\n        <div className=\"AppHeader\">\r\n            <h1 className='headerName'>Todo List</h1>\r\n            <p className=\"todoCounter\">\r\n                <span>to do - {toDo}</span>\r\n                <span>done - {done}</span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import SearchBlock from './SearchBlock'\r\n\r\nexport default SearchBlock;","import React from 'react';\r\n\r\nimport './SearchBlock.css';\r\n\r\nclass SearchBlock extends React.Component {\r\n\r\n    state = {\r\n        detectedText: \"\",\r\n    };\r\n\r\n    onSearchChange = (event) => {\r\n        const detectedText = event.target.value;\r\n        this.setState({ detectedText });\r\n        this.props.onSeachChange(detectedText);\r\n    }\r\n\r\n    render() {\r\n        const searchBlockText = 'What are you want to search?'\r\n        \r\n        return (\r\n            <div className=\"SearchBlock d-flex\">\r\n                <input  \r\n                    className='form-control' \r\n                    placeholder={searchBlockText}\r\n                    value={this.state.detectedText} \r\n                    onChange={this.onSearchChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBlock;","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;","import React from 'react';\r\n\r\nimport './TodoListItem.css';\r\n\r\n\r\nclass TodoListItem extends React.Component{\r\n\r\n    render() {\r\n        const { label, onDelete, done, important, onToggleDone, onToggleImportant } = this.props;\r\n        \r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if(important){\r\n            classNames += ' important';\r\n        }\r\n\r\n    \r\n        return (\r\n            <div className={classNames}>\r\n                <span \r\n                    className={\"todo-list-label\"}\r\n                    onClick={ onToggleDone }\r\n                >\r\n                    { label }\r\n                </span>\r\n                <button \r\n                    className=\"btn btn-secondary btn-important\"\r\n                    onClick={ onToggleImportant }\r\n                >\r\n                    <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <button \r\n                    className=\"btn btn-danger\"\r\n                    onClick={ onDelete }\r\n                >\r\n                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TodoListItem;","import TodoList from './TodoList';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../TodoListItem';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ( {todoItems, onDelete, onToggleImportant, onToggleDone} ) => {\r\n\r\n    const elements = todoItems.map((element) => {\r\n\r\n        const { id, ...otherProps } = element;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item list-group-item-secondary fontStyle\">\r\n                <TodoListItem\r\n                    {...otherProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                 />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n}\r\n\r\n\r\nexport default TodoList;","import ItemAddForm from \"./ItemAddForm\";\r\n\r\nexport default ItemAddForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport './ItemAddForm.css';\r\n\r\nexport default class ItemAddForm extends React.Component {\r\n\r\n    state = {\r\n        inputText: ''\r\n    };\r\n\r\n    onInputTextChange = (event) => {\r\n        this.setState({\r\n            inputText: event.target.value,\r\n        });\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onItemAdd(this.state.inputText);\r\n        this.setState({\r\n            inputText: ''\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <form \r\n                className=\"ItemAddForm d-flex\"\r\n                onSubmit={this.onSubmit}\r\n            >\r\n                <input \r\n                    className=\"form-control mr-2\"\r\n                    type=\"text\" \r\n                    placeholder=\"What are you going to do?\"\r\n                    required \r\n                    onChange={this.onInputTextChange}\r\n                    value={this.state.inputText}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary btnFont\"\r\n                >\r\n                    Add\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import ItemStatusFilter from './ItemStatusFilter';\r\n\r\nexport default ItemStatusFilter;","import React from 'react';\r\n\r\nimport './ItemStatusFilter.css';\r\n\r\nclass ItemStatusFilter extends React.Component {\r\n\r\n    buttons = [\"all\",\"active\",\"done\", \"important\"];\r\n\r\n    render() {\r\n\r\n        const { onItemsFilterChange, filter } = this.props;\r\n\r\n        const buttons = this.buttons.map((el) =>{\r\n            const btnClass = filter === el ? \"btn-secondary btnFont\" : \"btn-outline-secondary btnFont\"\r\n            return (\r\n                <button \r\n                    key={el}\r\n                    className={`btn ${btnClass}`}\r\n                    onClick={() => onItemsFilterChange(el)}\r\n                >{el}</button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group ItemStatusFilter\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ItemStatusFilter","import App from './App';\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport './App.css';\r\nimport AppHeader from '../AppHeader';\r\nimport SearchBlock from '../SearchBlock';\r\nimport TodoList from '../TodoList';\r\nimport ItemAddForm from '../ItemAddForm';\r\nimport ItemStatusFilter from '../ItemStatusFilter';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    ids = 10;\r\n\r\n    state = {\r\n        todoData: [\r\n            { label: 'Learn HTML', important: false, done: false, id:1, },\r\n            { label: 'Learn JS', important: false, done: false, id:2, },\r\n            { label: 'Learn React', important: false, done: false, id:3, },\r\n        ],\r\n        detectedText: '',\r\n        filter: \"all\", //all,active, done\r\n    };\r\n\r\n    \r\n\r\n    deleteItem = (id) =>{\r\n        this.setState((prevState ) => {\r\n            const index = prevState.todoData.findIndex((elem) => elem.id === id);\r\n            \r\n            const newTodoData = [\r\n                ...prevState.todoData.slice(0,index), \r\n                ...prevState.todoData.slice(index + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newTodoData\r\n            };\r\n        });\r\n    } \r\n\r\n    addItem = (text) => {\r\n        const item = {\r\n            label: text,\r\n            important: false,\r\n            id: this.ids++,\r\n        };\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [...todoData, item];\r\n\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleProp = (id, arr, prop) => {\r\n        const index = arr.findIndex((elem) => elem.id === id);\r\n            \r\n        const oldObj = arr[index];\r\n        const newObj = {...oldObj, [prop]: !oldObj[prop]};\r\n        \r\n        return [\r\n            ...arr.slice(0,index), \r\n            newObj,\r\n            ...arr.slice(index + 1)\r\n        ];\r\n    \r\n    }\r\n\r\n    toggleDone = (id) => {\r\n        this.setState(({ todoData }) =>{\r\n            return {\r\n                todoData: this.toggleProp(id, todoData, 'done')\r\n            };\r\n        });\r\n    } \r\n\r\n    toggleImportant = (id) => {\r\n        this.setState(({ todoData }) =>{\r\n            return {\r\n                todoData: this.toggleProp(id, todoData, 'important')\r\n            }\r\n        });\r\n    } \r\n\r\n    onSeachChange = (detectedText) => {\r\n        this.setState ({ detectedText });\r\n    }\r\n    \r\n    search = (arr, detectedText) => {\r\n        if (detectedText.length === 0) {\r\n          return arr;\r\n        }\r\n    \r\n        return arr.filter((el) => {\r\n          return el.label.toUpperCase().indexOf(detectedText.toUpperCase()) > -1;});\r\n      }\r\n\r\n    ItemsFilter = (arr, filterText) => {\r\n        switch(filterText) {\r\n            case \"all\": \r\n                return arr;\r\n            case \"active\": \r\n                return arr.filter((el) => !el.done);\r\n            case \"done\":\r\n                return arr.filter((el) => el.done);\r\n            case \"important\":\r\n                return arr.filter((el) => el.important)\r\n            default: \r\n                return arr;\r\n        }\r\n    }\r\n\r\n    onItemsFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, detectedText, filter } = this.state;\r\n        const detectedItems = this.ItemsFilter(this\r\n        .search(todoData, detectedText), filter);\r\n        const done = todoData.filter((el) => el.done).length;\r\n        const todo = todoData.filter((el) => !el.done).length;\r\n        \r\n\r\n        return(\r\n            <div className=\"App\">\r\n                <AppHeader toDo={todo}  done={done}/>\r\n                <div className=\"searchPanel d-flex\">\r\n                    <SearchBlock \r\n                        onSeachChange={this.onSeachChange} \r\n                    />\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onItemsFilterChange={this.onItemsFilterChange}\r\n                     />\r\n                </div>\r\n                <TodoList \r\n                    todoItems={ detectedItems } \r\n                    onDelete={ this.deleteItem}\r\n                    onToggleImportant={ this.toggleImportant }\r\n                    onToggleDone={ this.toggleDone }\r\n                />\r\n                <ItemAddForm onItemAdd={ this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}